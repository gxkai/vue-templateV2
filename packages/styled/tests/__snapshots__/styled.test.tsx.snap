// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`styled "withComponent" will replace tags but keep styling classes 1`] = `
<DocumentFragment>
  .emotion-0 {
  color: green;
}

<article>
    <!---->
    <h1
      class="emotion-0"
    >
      My Title
    </h1>
    <!---->
    <h2
      class="emotion-0"
    >
      My Subtitle
    </h2>
  </article>
</DocumentFragment>
`;

exports[`styled basic render 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  color: blue;
  font-size: 20px;
}

@media (min-width: 420px) {
  .emotion-0 {
    color: blue;
  }
}

<h1
    class="emotion-0"
  >
    Hello
  </h1>
</DocumentFragment>
`;

exports[`styled basic render with object as style 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  font-size: 20px;
}

<h1
    class="emotion-0"
  >
    Hello world
  </h1>
</DocumentFragment>
`;

exports[`styled call expression 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  font-size: 20px;
}

<div
    class="emotion-0"
  >
    hello world
  </div>
</DocumentFragment>
`;

exports[`styled component selectors 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  color: green;
}

.emotion-0 .emotion-2 {
  color: yellow;
}

.emotion-1 {
  color: hotpink;
}

<div
    class="emotion-0"
  >
    <!---->
    <div
      class="emotion-1 emotion-2"
    />
  </div>
</DocumentFragment>
`;

exports[`styled composing components 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  color: green;
  display: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

<button
    class="emotion-0"
  >
    hello world
  </button>
</DocumentFragment>
`;

exports[`styled composition 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  font-size: 20px;
  font-size: 13.333333333333334px;
}

<h1
    class="legacy__class emotion-0"
    prop="true"
  >
    hello world
  </h1>
</DocumentFragment>
`;

exports[`styled composition 2`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  color: blue;
  color: red;
  color: blue;
  font-size: 20px;
  font-size: 32px;
}

<h1
    class="legacy__class emotion-0"
  >
    hello world final
  </h1>
</DocumentFragment>
`;

exports[`styled composition based on props 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  color: blue;
}

<h1
    a="true"
    class="emotion-0"
  >
    hello world
  </h1>
</DocumentFragment>
`;

exports[`styled composition based on props 2`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  color: green;
}

<h1
    class="emotion-0"
  >
    hello world
  </h1>
</DocumentFragment>
`;

exports[`styled function in expression 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  font-size: 20px;
  font-size: 40px;
}

<h1
    class="legacy__class emotion-0"
  >
    hello world
  </h1>
</DocumentFragment>
`;

exports[`styled glamorous style api & composition 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  font-size: 20px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<h1
    class="emotion-0"
  >
    hello world
  </h1>
</DocumentFragment>
`;

exports[`styled handles more than 10 dynamic properties 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  -webkit-text-decoration: underline;
  text-decoration: underline;
  border-right: solid blue 54px;
  background: white;
  color: black;
  display: block;
  border-radius: 3px;
  padding: 25px;
  width: 500px;
  z-index: 100;
  font-size: 18px;
  text-align: center;
  border-left: blue;
}

<h1
    class="legacy__class emotion-0"
  >
    hello world
  </h1>
</DocumentFragment>
`;

exports[`styled higher order component 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  font-size: 20px;
  background-color: #7fc8d6;
  background-color: #343a40;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

<div
    class="emotion-0"
  />
</DocumentFragment>
`;

exports[`styled inline function return value is a function 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  font-size: 20px;
}

<h1
    class="emotion-0"
  >
    hello world
  </h1>
</DocumentFragment>
`;

exports[`styled input placeholder 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0::-webkit-input-placeholder {
  background-color: green;
}

.emotion-0::-moz-placeholder {
  background-color: green;
}

.emotion-0:-ms-input-placeholder {
  background-color: green;
}

.emotion-0::placeholder {
  background-color: green;
}

<input
    class="emotion-0"
  />
</DocumentFragment>
`;

exports[`styled input placeholder object 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0::-webkit-input-placeholder {
  background-color: green;
}

.emotion-0::-moz-placeholder {
  background-color: green;
}

.emotion-0:-ms-input-placeholder {
  background-color: green;
}

.emotion-0::placeholder {
  background-color: green;
}

<input
    class="emotion-0"
  />
</DocumentFragment>
`;

exports[`styled keyframes with css call 1`] = `
<DocumentFragment>
  <!---->
  @keyframes animation-0 {
  from, to {
    color: green;
  }

  50% {
    color: hotpink;
  }
}

.emotion-0 {
  -webkit-animation: animation-0;
  animation: animation-0;
}

<div
    class="emotion-0"
  />
</DocumentFragment>
`;

exports[`styled nested 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-0 div {
  color: green;
}

.emotion-0 div span {
  color: red;
}

.emotion-1 {
  font-size: 20px;
}

<div
    class="emotion-0"
  >
    hello 
    <!---->
    <h1
      class="emotion-1"
    >
      This will be green
    </h1>
     world
  </div>
</DocumentFragment>
`;

exports[`styled no dynamic 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  float: left;
}

<h1
    class="emotion-0"
  >
    Hello
  </h1>
</DocumentFragment>
`;

exports[`styled object as class 1`] = `
<DocumentFragment>
  <!---->
  <div
    class="myclass emotion-0"
  >
    Hello world with class as string
  </div>
</DocumentFragment>
`;

exports[`styled object as style 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<h1
    class="emotion-0"
  >
    Hello world
  </h1>
</DocumentFragment>
`;

exports[`styled object composition 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  border-radius: 50%;
  -webkit-transition: -webkit-transform 400ms ease-in-out;
  transition: transform 400ms ease-in-out;
  border: 3px solid currentColor;
  width: 96px;
  height: 96px;
  color: red;
  color: blue;
}

.emotion-0:hover {
  -webkit-transform: scale(1.2);
  -moz-transform: scale(1.2);
  -ms-transform: scale(1.2);
  transform: scale(1.2);
}

<img
    class="emotion-0"
  />
</DocumentFragment>
`;

exports[`styled objects 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  padding: 10px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<h1
    class="emotion-0"
  >
    hello world
  </h1>
</DocumentFragment>
`;

exports[`styled objects with spread properties 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  font-size: 20px;
}

<figure
    class="emotion-0"
  >
    hello world
  </figure>
</DocumentFragment>
`;

exports[`styled prop filtering 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  color: green;
}

<a
    a="true"
    aria-label="some label"
    arialabel="some label"
    b="true"
    class="emotion-0"
    cool="true"
    data-wow="value"
    datawow="value"
    filtering="true"
    href="link"
    is="true"
    prop="true"
    wow="true"
  >
    hello world
  </a>
</DocumentFragment>
`;

exports[`styled random expressions undefined return 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  color: green;
}

<h1
    class="legacy__class emotion-0"
  >
    hello world
  </h1>
</DocumentFragment>
`;

exports[`styled random object expression 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  background-color: hotpink;
  font-size: 1rem;
  margin-top: 0;
  margin-right: auto;
  margin-bottom: 0;
  margin-left: auto;
  color: green;
}

<h1
    class="legacy__class emotion-0"
    prop="true"
  >
    hello world
  </h1>
</DocumentFragment>
`;

exports[`styled same component rendered multiple times 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  color: green;
}

<div
    class="emotion-0"
  />
</DocumentFragment>
`;

exports[`styled same component rendered multiple times 2`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  color: green;
}

<div
    class="emotion-0"
  >
    <!---->
    <div
      class="emotion-0"
    />
    <!---->
    <div
      class="emotion-0"
    />
  </div>
</DocumentFragment>
`;

exports[`styled throws if undefined is passed as the component 1`] = `
"You are trying to create a styled element with an undefined component.
You may have forgotten to import it."
`;

exports[`styled withComponent does carry styles from flattened component 1`] = `
<DocumentFragment>
  <!---->
  .emotion-0 {
  color: green;
  color: hotpink;
}

<p
    class="emotion-0"
  />
</DocumentFragment>
`;

exports[`styled withComponent with function interpolation 1`] = `
<DocumentFragment>
  .emotion-0 {
  color: green;
}

<article>
    <!---->
    <h1
      class="emotion-0"
    >
      My Title
    </h1>
    <!---->
    <h2
      class="emotion-0"
    >
      My Subtitle
    </h2>
  </article>
</DocumentFragment>
`;
